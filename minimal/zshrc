DISABLE_AUTO_TITLE="true"       # Remove echo of command on next line
export TERM=screen-256color
#enable dvorak with alt+shift
#setxkbmap -layout se,se -variant ,dvorak -option grp:alt_shift_toggle
#setxkbmap -layout se,se -variant ,dvorak_a5 -option grp:alt_shift_toggle
setopt rmstarsilent #Set so that rm -f do not ask confirmation
plugins=(git vi-mode zsh-autosuggestions zsh-syntax-highlighting)

export HOSTNAME=`hostname`
ZSH_DISABLE_COMPFIX=true
DISABLE_MAGIC_FUNCTIONS=true
RANGER_LOAD_DEFAULT_RC=FALSE
ZDOTDIR=$HOME/.config/zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/bin:$HOME/.local/bin:$HOME/.cargo/bin:$HOME/.config/nvim/plugged/fzf/bin:$PATH"
setopt histignorealldups sharehistory



# Use emacs keybindings even if our EDITOR is set to vi
#bindkey -e
# Use vim keybindings
#bindkey -v
#autoload -U edit-command-line
#zle -N edit-command-line
##Home and end key Ctrl-v then key to see what is sent
#bindkey  "^[[1~"   beginning-of-line
#bindkey  "^[[4~"   end-of-line
#
#bindkey '^E' edit-command-line                   # Opens Vim to edit current command line
#bindkey '^R' history-incremental-search-backward # Perform backward search in command line history
#bindkey '^S' history-incremental-search-forward  # Perform forward search in command line history
#bindkey '^P' history-search-backward             # Go back/search in history (autocomplete)
#bindkey '^N' history-search-forward              # Go forward/search in history (autocomplete)
#

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTTIMEFORMAT="%Y-%m-%d %T "
HISTSIZE=100000 
SAVEHIST=100000
HISTFILE=~/.config/zsh/history

#PROMPT='%F{green}%n@%m:%B%F{blue}%~%f%b%# '

PROMPT='%F{green}%n%f@%F{magenta}%m%f %F{blue}%B%~%b%f %# '
RPROMPT=' '
#RPROMPT='[%F{yellow}%?%f]'

ZSH_CUSTOM=~/.config/zsh

#Change the keypress rate works with Xwin
#xset r rate 180 20

# Remove warnings after sudo
ZSH_DISABLE_COMPFIX=true

# You may need to manually set your language environment
#export LC_ALL=se_SV.UTF-8
export LANG=se_SV.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# Aliases
#alias ranger='source ranger' #To make ranger exit in current dir OBS did not work with paths in command line
#alias ranger='ranger --choosedir=$HOME/rangerdir;cd "$(cat $HOME/rangerdir)"||sed "s/ .*//"'
alias il='icmlog'
alias ilc='icmlog -c'
alias ssh='ssh -CY'
alias ch='cd ~/'
alias ce='ce /etc'
alias sv='/bin/sudo vim'
alias hz='history|fzf --tac --no-sort'
alias ht='history -f|fzf --tac --no-sort'
alias e='exit'
alias vimdiff='nvim -d'
alias vudiff='diff -qr /srv/github/vufind/ /usr/local/vufind/|sed "/cache/d;/solr/d;/vufind\/:/d;/\.git/d;/README/d;s/^Files/vim -d/g;s/and //g;s/ differ//g"|fzf'
# bzip2 still best alternative I feel. alias bzip2='echo "==========================================\n\n WARNING! (bzip2) Använd lzma istället \n\n==========================================" 1>&2;'
if [ $(command -v nvim) ]; then
    export EDITOR='nvim'
    alias vim=nvim
    alias vi=nvim
    alias vc="nvim ~/.config/nvim/init.vim"
    alias zc='nvim ~/.zshrc'
    if [ -f ~/utv/git/config/fzf/key-bindings.zsh ]; then
        source ~/utv/git/config/fzf/key-bindings.zsh
        source ~/utv/git/config/fzf/completion.zsh
    elif [ -f ~/utv/git/configs/fzf/key-bindings.zsh ]; then
        source ~/utv/git/configs/fzf/key-bindings.zsh
        source ~/utv/git/configs/fzf/completion.zsh
    fi
else
    export EDITOR='vim'
    alias vi=vim
    alias vc="vim ~/.config/nvim/init.vim"
    alias zc='vim ~/.zshrc'
fi
# Replace sudo too keep variables and go to zsh
u() {
    command sudo -E PATH="$HOME/bin:/sbin:/usr/sbin:/usr/local/sbin:$PATH" zsh
}



# Use ripgrep with fzf
if type rg &> /dev/null; then
  #export FZF_DEFAULT_COMMAND='find .'
  export FZF_DEFAULT_COMMAND='rg --hidden --files --glob "!.git/*"'
  export FZF_DEFAULT_OPTS='-m --height 100% --border'
fi

if [ -f ~/.aliases ]; then
    source ~/.aliases
fi


PATH="$HOME/bin:$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;
zstyle ':urlglobber' url-other-schema

#bindkey -s '^Z' 'fg^M'

source ~/.config/zsh/oh-my-zsh/oh-my-zsh.sh


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
if [ -f "$HOME/anaconda3/bin/conda" ]; then
  __conda_setup="$('$HOME/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "$HOME/anaconda3/etc/profile.d/conda.sh" ]; then
          . "$HOME/anaconda3/etc/profile.d/conda.sh"
      else
          export PATH="$HOME/anaconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
fi
# <<< conda initialize <<<

